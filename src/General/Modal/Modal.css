/* Inner element (modal window) */

.ModalStyle-rootHover > div:not([class*='battlepick'i]),
.DialogContainerComponentStyle-container {
	position: relative;
	background: var(--severitium-dark-transparent-background1);
	-webkit-backdrop-filter: blur(.5em);
			backdrop-filter: blur(.5em);
	outline: var(--severitium-gray-color) solid .1em;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
}

/* Header container of the modal window */

.DialogContainerComponentStyle-header {
	display: flex;
	justify-content: center;
	align-items: center;
	position: unset;
}

/* Header of the modal window */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) h1,
.DialogContainerComponentStyle-header > h1,
.HeadlineComponentStyle-popupHeadlineContent span {
	color: var(--severitium-white-text-color);
}

/* Text of the modal window */

.DialogContainerComponentStyle-contentContainer span,
.ModalStyle-rootHover > div > div:has(> [class*="head"i]) + div > div > div {
	color: var(--severitium-white-text-color) !important;
}

/*
	Highlighted text in modal for:
	* Settings modal
	* Friends modal
	* Rename modal
*/

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .DialogContainerComponentStyle-contentContainer span[class]:not([class*="common"i]),
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .FriendListComponentStyle-commonBlockText span[class]:not([class*="common"i]),
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .PaidRenameDialogComponentStyle-messageBlock > span[class]:not([class*="common"i]) {
	color: var(--severitium-main-color);
}

/* 
	Higlighted text in modal for:
	* Successful purcase modal
*/

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .SuccessfulPurchaseComponentStyle-reward span[class]:not([class*="common"i]) {
	color: var(--severitium-white-text-color);
}

/* Buttons block */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) > div:nth-child(3) {
	justify-content: center;
}

/* Cancel button of the modal window */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .DialogContainerComponentStyle-keyButton,
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .PopupMessageComponentStyle-buttonsContainer > div:nth-child(1) {
	outline: none;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	background: var(--severitium-gray-button-background);
	border: var(--severitium-gray-button-border-color) solid .1em;
	transition: border .2s ease;
}

/* Cancel button on hover */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .DialogContainerComponentStyle-keyButton:hover,
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .PopupMessageComponentStyle-buttonsContainer > div:nth-child(1):hover {
	border: var(--severitium-gray-button-border-color-hover) solid .1em;
}

/* Cancel button text */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .DialogContainerComponentStyle-keyButton span,
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .PopupMessageComponentStyle-buttonsContainer > div:nth-child(1) span {
	color: var(--severitium-gray-button-color);
}

/* Apply button of the modal window */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .DialogContainerComponentStyle-enterButton,
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .SuccessfulPurchaseComponentStyle-content > div:last-child,
.ModalStyle-rootHover > .Need2FaDialogComponentStyle-container .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2),
.ModalStyle-rootHover > .ChangeOwnerDialogComponentStyle-container .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2) {
	outline: none;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	background: var(--severitium-green-button-background);
	border: var(--severitium-green-button-border-color) solid .1em;
	transition: border .2s ease;
}

/* Apply button on hover */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .DialogContainerComponentStyle-enterButton:hover,
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .SuccessfulPurchaseComponentStyle-content > div:last-child:hover,
.ModalStyle-rootHover > .Need2FaDialogComponentStyle-container .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2):hover,
.ModalStyle-rootHover > .ChangeOwnerDialogComponentStyle-container .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2):hover {
	border: var(--severitium-green-button-border-color-hover) solid .1em;
}

/* Apply button text */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .DialogContainerComponentStyle-enterButton span,
.ModalStyle-rootHover > div:not([class*='battlepick'i]) .SuccessfulPurchaseComponentStyle-content > div:last-child span,
.ModalStyle-rootHover > .Need2FaDialogComponentStyle-container .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2) span,
.ModalStyle-rootHover > .ChangeOwnerDialogComponentStyle-container .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2) span {
	color: var(--severitium-green-button-color);
}

/* Apply red (warning) button of the modal window */

.ModalStyle-rootHover > div:not([class*='battlepick'i]):not([class*='need2fa'i]):not([class*='changeowner'i]) .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2) {
	outline: none;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	background: var(--severitium-red-button-background);
	border: var(--severitium-red-button-border-color) solid .1em;
	transition: border .2s ease;
}

/* Apply red (warning) button on hover */

.ModalStyle-rootHover > div:not([class*='battlepick'i]):not([class*='need2fa'i]):not([class*='changeowner'i]) .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2):hover {
	border: var(--severitium-red-button-border-color-hover) solid .1em;
}

/* Apply red (warning) button text */

.ModalStyle-rootHover > div:not([class*='battlepick'i]):not([class*='need2fa'i]):not([class*='changeowner'i]) .PopupMessageComponentStyle-buttonsContainer > div:nth-child(2) span {
	color: var(--severitium-red-button-color);
}

/* Gold (purchase) button of the modal window */ 

.ModalStyle-rootHover > div:not([class*='battlepick'i]) div[class*='premiumbutton'i] {
	outline: none;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	background: var(--severitium-gold-button-background);
	border: var(--severitium-gold-button-border-color) solid .1em;
	transition: border .2s ease;
}

/* Gold (warning) button on hover */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) div[class*='premiumbutton'i]:hover {
	border: var(--severitium-gold-button-border-color-hover) solid .1em;
}

/* Gold (purchase) button text */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) div[class*='premiumbutton'i] > span {
	color: var(--severitium-gold-button-color);
}

/* Hotkey block */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .PopupMessageComponentStyle-buttonsContainer > div h3,
.ModalStyle-rootHover > div:not([class*='battlepick'i]) h3[class*="hotkey"i] {
	background: transparent;
	color: var(--severitium-dark-white-text-color);
	border: var(--severitium-gray-color) dashed .1em;
	border-radius: .1em;
}

/* Server restart timer */

.ServerHaltAlertComponentStyle-timer span[id*='timer'i] {
	color: var(--severitium-main-color);
}

/* All timers inside modal window */

.ModalStyle-rootHover span[id*='timer'i] {
	color: var(--severitium-main-color);
}

/* Close icon container */

:has(> .DialogContainerComponentStyle-imgClose) {
	position: unset;
}

/* Close (cross) icon of the modal container */

.DialogContainerComponentStyle-imgClose,
.ConverterDialogComponentStyle-closeIcon {
	position: absolute;
	top: 0;
	right: 0;
	width: 1.5em;
	height: 1.5em;
	margin: 1em;
	padding: 0;
	background: none;
	background-image: none;
	-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96 96"><path d="m84 0 12 12-48 48-36 36L0 84l36-36L0 12 12 0l36 36z"/><path d="M48 60h24l24 24-12 12z"/></svg>');
			mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96 96"><path d="m84 0 12 12-48 48-36 36L0 84l36-36L0 12 12 0l36 36z"/><path d="M48 60h24l24 24-12 12z"/></svg>');
	background-color: var(--severitium-white-color);
	-webkit-mask-position: center center;
			mask-position: center center;
	-webkit-mask-repeat: no-repeat;
			mask-repeat: no-repeat;
	-webkit-mask-size: contain;
			mask-size: contain;
	transition: background-color .2s ease;
}

/* Close (cross) icon of the modal container on hover */

.DialogContainerComponentStyle-imgClose:hover,
.ConverterDialogComponentStyle-closeIcon:hover {
	width: 1.5em;
	height: 1.5em;
	background-image: none;
	background-color: var(--severitium-red-color);
}

/* Convert dialog close icon */

.ConverterDialogComponentStyle-closeIcon {
	position: relative;
}

/* Links inside the modal window */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) a u,
.DialogContainerComponentStyle-container a u {
	color: var(--severitium-main-color);
}

/* Premium modal */

/* Text under premium icon */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) img[src*='iconpremium'i] + span {
	color: var(--severitium-gold-text-color);
}

/* Benefits percents inside the premium modal */

.ModalStyle-rootHover > div:not([class*='battlepick'i]) .UserInfoContainerStyle-premiumBenefitsContainer > span:last-child {
	color: var(--severitium-gold-text-color);
}

/* Modal window on hover on an icon, tooltip (see above) */

.TooltipStyle-tooltip {
	background: var(--severitium-dark-transparent-background1);
	-webkit-backdrop-filter: blur(.5em);
			backdrop-filter: blur(.5em);
	outline: var(--severitium-gray-color) solid .1em;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	-webkit-animation: tooltipOpens .1s ease;
			animation: tooltipOpens .1s ease;
}

@-webkit-keyframes tooltipOpens {
	0% {
		-webkit-transform: scale(0);
				transform: scale(0);
	}
	100% {
		-webkit-transform: scale(1);
				transform: scale(1);
	}
}

@keyframes tooltipOpens {
	0% {
		-webkit-transform: scale(0);
				transform: scale(0);
	}
	100% {
		-webkit-transform: scale(1);
				transform: scale(1);
	}
}

/* Padding of the tooltip inner */

.TooltipStyle-tooltip > div {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	padding: .5em;
}

/* Tooltip inner text */

.TooltipStyle-tooltip > div > span {
	font-size: 1em;
	color: var(--severitium-white-text-color);
}

/* Tooltip content (e.g. text) */

.TooltipStyle-tooltip p.TooltipStyle-content {
	font-size: 1em;
	color: var(--severitium-white-text-color);
}

/* Ruby currency amount inside modal */

.ModalStyle-rootHover > div > div:has(> [class*="head"i]) + div > div > div > img[src*="ruby"i] + span {
	color: var(--severitium-ruby-color);
}

/* Tancoin currency amount inside modal */

.ModalStyle-rootHover > div > div:has(> [class*="head"i]) + div > div > div > img[src*="coin"i] + span {
	color: var(--severitium-tancoin-color);
}

/* Crystal currency amount inside modal */

.ModalStyle-rootHover > div > div:has(> [class*="head"i]) + div > div > div > img[src*="crystal"i] + span {
	color: var(--severitium-crystal-color);
}

/* Convert dialog right panel (balance amount ruby) */

.ConverterDialogComponentStyle-rightPanel .ConverterDialogComponentStyle-balanceContainer > img[src*="ruby"] + span {
	color: var(--severitium-ruby-color);
}

/* Convert dialog right panel (balance amount tancoin) */

.ConverterDialogComponentStyle-rightPanel .ConverterDialogComponentStyle-balanceContainer > img[src*="coin"] + span {
	color: var(--severitium-tancoin-color);
}

/* Convert dialog right panel (balance amount crystal) */

.ConverterDialogComponentStyle-rightPanel .ConverterDialogComponentStyle-balanceContainer > img[src*="crystal"] + span {
	color: var(--severitium-crystal-color);
}

/* Convert dialog description container */

.ConverterDialogComponentStyle-mainContainer .ConverterDialogComponentStyle-descriptionContainer {
	border-bottom: .1em solid var(--severitium-dark-gray-color);
}

/* Ruby name text */

.ConverterDialogComponentStyle-rubiesText {
	color: var(--severitium-ruby-color);
}

/* Coins name text */

.ConverterDialogComponentStyle-coinsText {
	color: var(--severitium-tancoin-color);
}

/* Currency amount text */

.ConverterDialogComponentStyle-currencyValue {
	color: var(--severitium-white-color);
}

/* Conversion container */

.ConverterDialogComponentStyle-conversionContainer {
	background: none;
}

/* Minus slider button */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="minus"i]) {
	outline: none;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	background: var(--severitium-red-button-background);
	border: var(--severitium-red-button-border-color) solid .1em;
	transition: border .2s ease;
}

/* Button on hover */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="minus"i]):hover {
	border: var(--severitium-red-button-border-color-hover) solid .1em;
}

/* Button original icon */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton > img[src*="minus"i] {
	display: none;
}

/* Button custom icon */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="minus"i])::before {
	content: '';
	height: 1.5em;
	width: 1.5em;
	background-color: var(--severitium-red-button-color);
	-webkit-mask-position: center center;
			mask-position: center center;
	-webkit-mask-repeat: no-repeat;
			mask-repeat: no-repeat;
	-webkit-mask-size: contain;
			mask-size: contain;
	-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M24 9.75v4.5H0v-4.5z"/></svg>');
			mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M24 9.75v4.5H0v-4.5z"/></svg>');
}

/* Plus slider button */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="plus"i]) {
	outline: none;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	background: var(--severitium-green-button-background);
	border: var(--severitium-green-button-border-color) solid .1em;
	transition: border .2s ease;
}

/* Button on hover */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="plus"i]):hover {
	border: var(--severitium-green-button-border-color-hover) solid .1em;
}

/* Button original icon */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton > img[src*="plus"i] {
	display: none;
}

/* Button custom icon */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="plus"i])::before {
	content: '';
	height: 1.5em;
	width: 1.5em;
	background-color: var(--severitium-green-button-color);
	-webkit-mask-position: center center;
			mask-position: center center;
	-webkit-mask-repeat: no-repeat;
			mask-repeat: no-repeat;
	-webkit-mask-size: contain;
			mask-size: contain;
	-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M19.5 0h9v19.5H48v9H0v-9h19.5zm0 37.5 9-9V48h-9z"/></svg>');
			mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M19.5 0h9v19.5H48v9H0v-9h19.5zm0 37.5 9-9V48h-9z"/></svg>');
}

/* Max slider button */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="max"i]) {
	outline: none;
	box-shadow: none;
	border-radius: var(--severitium-border-radius);
	background: var(--severitium-blue-button-background);
	border: var(--severitium-blue-button-border-color) solid .1em;
	transition: border .2s ease;
}

/* Button on hover */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="max"i]):hover {
	border: var(--severitium-blue-button-border-color-hover) solid .1em;
}

/* Button original icon */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton > img[src*="max"i] {
	display: none;
}

/* Button custom icon */

.ConverterDialogComponentStyle-sliderWithButtonsContainer .ConverterDialogComponentStyle-sliderButton:has(> img[src*="max"i])::before {
	content: '';
	height: 1.5em;
	width: 1.5em;
	background-color: var(--severitium-blue-button-color);
	-webkit-mask-position: center center;
			mask-position: center center;
	-webkit-mask-repeat: no-repeat;
			mask-repeat: no-repeat;
	-webkit-mask-size: contain;
			mask-size: contain;
	-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill-rule="evenodd" d="m18 21-6-6-6 6H0L12 9l12 12zm6-9h-6l-6-6-6 6H0L12 0z" clip-rule="evenodd"/></svg>');
			mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill-rule="evenodd" d="m18 21-6-6-6 6H0L12 9l12 12zm6-9h-6l-6-6-6 6H0L12 0z" clip-rule="evenodd"/></svg>');
}

/* Minimal amount */

.ConverterDialogComponentStyle-minValue {
	color: var(--severitium-white-color);
}

/* Maximal amount */

.ConverterDialogComponentStyle-maxRangeValueContainer > span {
	color: var(--severitium-white-color);
}