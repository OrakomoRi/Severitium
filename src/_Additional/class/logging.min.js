class Logger{constructor(o,e=!1){this.scriptName=o,this.logging=e}log(o,e="log"){if(!this.logging)return;const s={log:"color: white",info:"color: blue",warn:"color: orange",error:"color: red",success:"color: green",debug:"color: purple"};console.log(`%c${this.scriptName.toUpperCase()} log:%c ${o}`,"color: white; font-weight: bold",s[e]||s.log)}logVersionComparison(o,e){switch(this.logging=!0,this.log("========\n"),o){case 1:this.log(`A new version is available on GitHub: ${e}. Checking for stable version...`,"info");break;case 0:this.log(/[-+]/.test(script.version)?"You are using some version that is based on the latest stable.":"You are using the latest stable version.","info");break;case-1:this.log("You are using a version newer than the one on GitHub.","warn");break;case-2:this.log("Error comparing versions.","error");break;default:this.log("Default case")}this.log(`Your × GitHub:\n${script.version} × ${e}`,"info"),this.log("\n========"),this.logging=!1}enableLogging(){this.logging=!0}disableLogging(){this.logging=!1}}