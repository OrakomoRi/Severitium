name: Auto Build and Release

on:
    push:
        branches:
            - main
        paths:
            - "release/severitium.user.js"

permissions:
    contents: write

jobs:
    build-and-release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Extract version from severitium.user.js
              id: extract_version
              run: |
                  version=$(grep -oP '@version\s+\K[\w.+-]+' release/severitium.user.js)
                  echo "VERSION=$version" >> $GITHUB_ENV
                  echo "version=$version" >> $GITHUB_OUTPUT

            - name: Check if release with this version already exists
              id: check_release
              run: |
                  if gh release view "$VERSION" >/dev/null 2>&1; then
                    echo "Release already exists, skipping."
                    echo "exists=true" >> $GITHUB_OUTPUT
                  else
                    echo "exists=false" >> $GITHUB_OUTPUT
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Stop if release exists
              if: steps.check_release.outputs.exists == 'true'
              run: exit 0

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Install minifiers
              run: npm install -g terser clean-css-cli

            - name: Build release files
              run: |
                  mkdir -p "builds/$VERSION"
                  find src -path "src/_Additional" -prune -o -name "*.min.js" -print \
                    | xargs cat > "builds/$VERSION/script.release.min.js"
                  terser "builds/$VERSION/script.release.min.js" -c -m -o "builds/$VERSION/script.release.min.js"

                  find src -path "src/_Additional" -prune -o -name "*.min.css" -print \
                    | xargs cat > "builds/$VERSION/style.release.min.css"
                  cleancss -o "builds/$VERSION/style.release.min.css" "builds/$VERSION/style.release.min.css"

            - name: Push to builds branch
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

                  git fetch origin builds
                  git switch --create builds origin/builds || git switch builds

                  mkdir -p "release/data/$VERSION"
                  cp -r builds/$VERSION/* "release/data/$VERSION/"

                  git add release/data/$VERSION
                  git commit -m "$VERSION\nbuild: release artifacts"
                  git push origin builds

            - name: Create GitHub release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ env.VERSION }}
                  name: ${{ env.VERSION }}
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
